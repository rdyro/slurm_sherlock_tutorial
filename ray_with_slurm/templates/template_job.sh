#!/usr/bin/env bash
# shellcheck disable=SC2206
# THIS FILE IS GENERATED BY AUTOMATION SCRIPT! PLEASE REFER TO ORIGINAL SCRIPT!
# THIS FILE IS A TEMPLATE AND IT SHOULD NOT BE DEPLOYED TO PRODUCTION!
#SBATCH --job-name=${JOB_NAME}
#SBATCH --output=${OUTPUT_NAME}
#SBATCH --mail-type=ALL
#SBATCH --mail-user=rdyro@stanford.edu
#SBATCH --time=0-10:00
### This script works for any number of nodes, Ray will find and manage all resources
#SBATCH --nodes=${NUM_NODES}
#SBATCH --cpus-per-task=${NUM_CPU}
### Give all resources to a single Ray task, ray can manage the resources internally
#SBATCH --ntasks-per-node=1
${NUM_GPUS_PER_NODE}
${NUM_GPUS_TOTAL}
${PARTITION_OPTION}

# Load modules or your own conda environment here
${LOAD_ENV}

# ===== DO NOT CHANGE THINGS HERE UNLESS YOU KNOW WHAT YOU ARE DOING =====
# This script is a modification to the implementation suggest by gregSchwartz18 here:
# https://github.com/ray-project/ray/issues/826#issuecomment-522116599
redis_password=$(uuidgen)
export redis_password

export SLURM_JOB_NODELIST=$(squeue -u $USER -h -o %N | head -n1)
nodes=$(scontrol show hostnames "$SLURM_JOB_NODELIST") # Getting the node names
nodes_array=($nodes)

node_1=${nodes_array[0]}
ip=$(srun ${SRUN_GPU_HEADER} --nodes=1 --ntasks=1 -c ${NUM_CPU} --nodelist="$node_1" hostname --ip-address)
echo $ip
export TUNE_MAX_PENDING_TRIALS_PG=${NUM_NODES}

# if we detect a space character in the head node IP, we'll
# convert it to an ipv4 address. This step is optional.
if [[ "$ip" == *" "* ]]; then
  IFS=' ' read -ra ADDR <<< "$ip"
  if [[ ${#ADDR[0]} -gt 16 ]]; then
    ip=${ADDR[1]}
  else
    ip=${ADDR[0]}
  fi
  echo "IPV6 address detected. We split the IPV4 address as $ip"
fi

port=6379
ip_head=$ip:$port
echo "ip_head = " $ip_head
echo "IP Head: $ip_head"

echo "STARTING HEAD at $node_1"
srun ${SRUN_GPU_HEADER} --nodes=1 --ntasks=1 -c ${NUM_CPU} --nodelist="$node_1" \
  ray start --head --node-ip-address="$ip" --port=$port --redis-password="$redis_password" --block &
sleep 10

worker_num=$((SLURM_JOB_NUM_NODES - 1)) #number of nodes other than the head node
for ((i = 1; i <= worker_num; i++)); do
  node_i=${nodes_array[$i]}
  echo "STARTING WORKER $i at $node_i"
  srun ${SRUN_GPU_HEADER} --nodes=1 --ntasks=1 -c ${NUM_CPU} --nodelist="$node_i" \
    ray start --address "$ip_head" --redis-password="$redis_password" --block &
  sleep 0.1
done

sleep 5

# ===== Call your code below =====
export RAY_ADDRESS="$ip_head"
export RAY_EXP_NAME="${EXP_NAME}"
export RAY_NUM_CPU=${NUM_CPU}
python3 ${SCRIPT_PLACEHOLDER} ${SCRIPT_ARGS_PLACEHOLDER}
